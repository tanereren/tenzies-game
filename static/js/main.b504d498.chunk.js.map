{"version":3,"sources":["Die.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","className","style","onClick","holdDice","value","App","React","useState","allNewDice","dice","setDice","tenzies","setTenzies","count","setCount","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","useEffect","allHeld","every","die","firstValue","allSameValue","diceElements","map","oldDice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEe,SAASA,EAAIC,GACxB,IAAMC,EAAS,CACXC,gBAAiBF,EAAMG,OAAS,UAAY,SAEhD,OACI,qBACIC,UAAU,WACVC,MAAOJ,EACPK,QAASN,EAAMO,SAHnB,SAKI,oBAAIH,UAAU,UAAd,SAAyBJ,EAAMQ,U,2BCP5B,SAASC,IAEpB,MAAwBC,IAAMC,SAASC,KAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BJ,IAAMC,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,IAAMC,SAAS,GAAzC,mBAAOM,EAAP,KAAcC,EAAd,KAWA,SAASC,IACL,MAAO,CACHX,MAAOY,KAAKC,KAAqB,EAAhBD,KAAKE,UACtBnB,QAAQ,EACRoB,GAAIC,eAIZ,SAASZ,IAEL,IADA,IAAMa,EAAU,GACPC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAQE,KAAKR,KAEjB,OAAOM,EAtBXf,IAAMkB,WAAU,WACZ,IAAMC,EAAUhB,EAAKiB,OAAM,SAAAC,GAAG,OAAIA,EAAI5B,UAChC6B,EAAanB,EAAK,GAAGL,MACrByB,EAAepB,EAAKiB,OAAM,SAAAC,GAAG,OAAIA,EAAIvB,QAAUwB,KACjDH,GAAWI,GACXjB,GAAW,KAEhB,CAACH,IA2CJ,IAAMqB,EAAerB,EAAKsB,KAAI,SAAAJ,GAAG,OAC7B,cAAChC,EAAD,CAEIS,MAAOuB,EAAIvB,MACXL,OAAQ4B,EAAI5B,OACZI,SAAU,kBAdAgB,EAceQ,EAAIR,GAbjCT,GAAQ,SAAAsB,GAAO,OAAIA,EAAQD,KAAI,SAAAJ,GAC3B,OAAOA,EAAIR,KAAOA,EAAX,2BACCQ,GADD,IACM5B,QAAS4B,EAAI5B,SACtB4B,aAERb,EAASD,EAAQ,GANrB,IAAkBM,IAWLQ,EAAIR,OAOjB,OACI,iCACKR,GAAW,cAAC,IAAD,IACZ,oBAAIX,UAAU,QAAd,qBACA,mBAAGA,UAAU,eAAb,+GAEA,qBAAKA,UAAU,iBAAf,SACK8B,IAEL,0CAAajB,KACb,wBACIb,UAAU,YACVE,QA9CZ,WACQS,GASAC,GAAW,GACXF,EAAQF,KACRM,EAAS,KAVTJ,GAAQ,SAAAsB,GAAO,OAAIA,EAAQD,KAAI,SAAAJ,GAC3B,OAAOA,EAAI5B,OACP4B,EACAZ,UAGRD,EAASD,EAAQ,KAoCjB,SAIKF,EAAU,WAAa,YC/ExCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC9B,EAAD,MAEF+B,SAASC,eAAe,W","file":"static/js/main.b504d498.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function Die(props) {\n    const styles = {\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\n    }\n    return (\n        <div \n            className=\"die-face\" \n            style={styles}\n            onClick={props.holdDice}\n        >\n            <h2 className=\"die-num\">{props.value}</h2>\n        </div>\n    )\n}","import React from \"react\"\nimport Die from \"./Die\"\nimport {nanoid} from \"nanoid\"\nimport Confetti from \"react-confetti\"\n\nexport default function App() {\n\n    const [dice, setDice] = React.useState(allNewDice())\n    const [tenzies, setTenzies] = React.useState(false)\n    const [count, setCount] = React.useState(0)\n    \n    React.useEffect(() => {\n        const allHeld = dice.every(die => die.isHeld)\n        const firstValue = dice[0].value\n        const allSameValue = dice.every(die => die.value === firstValue)\n        if (allHeld && allSameValue) {\n            setTenzies(true)\n        }\n    }, [dice])\n\n    function generateNewDie() {\n        return {\n            value: Math.ceil(Math.random() * 6),\n            isHeld: false,\n            id: nanoid()\n        }\n    }\n     \n    function allNewDice() {\n        const newDice = []\n        for (let i = 0; i < 10; i++) {\n            newDice.push(generateNewDie())\n        }\n        return newDice\n    }\n    \n    function rollDice() {\n        if(!tenzies) {\n            setDice(oldDice => oldDice.map(die => {\n                return die.isHeld ? \n                    die :\n                    generateNewDie()\n                    \n            }))\n            setCount(count + 1)\n        } else {\n            setTenzies(false)\n            setDice(allNewDice())\n            setCount(0)\n        }\n    }\n    \n    function holdDice(id) {\n        setDice(oldDice => oldDice.map(die => {\n            return die.id === id ? \n                {...die, isHeld: !die.isHeld} :\n                die\n        }))\n        setCount(count + 1)\n    }\n    \n    const diceElements = dice.map(die => (\n        <Die \n            key={die.id} \n            value={die.value} \n            isHeld={die.isHeld} \n            holdDice={() => holdDice(die.id)}\n        />\n    ))\n    \n    return (\n        <main>\n            {tenzies && <Confetti />}\n            <h1 className=\"title\">Tenzies</h1>\n            <p className=\"instructions\">Roll until all dice are the same. \n            Click each die to freeze it at its current value between rolls.</p>\n            <div className=\"dice-container\">\n                {diceElements}\n            </div>\n            <p>Clicks = {count}</p>\n            <button \n                className=\"roll-dice\" \n                onClick={rollDice}\n            >\n                {tenzies ? \"New Game\" : \"Roll\"}\n            </button>\n        </main>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}